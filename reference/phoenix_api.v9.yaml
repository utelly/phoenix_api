openapi: 3.0.0
info:
  title: phoenix_api
  version: '9'
servers:
  - url: 'https://api.utelly.com/phoenix/9'
    description: prod
paths:
  /genres:
    get:
      summary: Get genres
      tags:
        - Genre Management
      responses:
        '200':
          description: OK
      operationId: nine.genres
      description: ''
      parameters:
        - schema:
            type: array
            items:
              type: string
          in: query
          name: id
          style: form
  '/user/{user_guid}/locations':
    get:
      summary: Get user locations
      tags:
        - Location Management
      responses:
        '200':
          description: OK
      operationId: nine.locations
      parameters: []
    parameters:
      - schema:
          type: string
        name: user_guid
        in: path
        required: true
  /search:
    post:
      summary: Search
      tags:
        - Search Management
      responses:
        '200':
          description: OK
      operationId: post-2aa4db27-aba6-4b87-96ae-9b34f7ee9404
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - event
                    - odevent
                user:
                  type: string
                payload:
                  type: object
                  properties:
                    locations.id:
                      type: array
                      items:
                        type: string
                    content_rating:
                      type: array
                      items:
                        type: string
                    topic.metadata.release_date:
                      type: array
                      items:
                        type: string
                        pattern: "^\\[([0-9]+|\\*) TO ([0-9]+|\\*)\\]$"
                    q:
                      type: string
                    method:
                      oneOf:
                        - properties:
                            '':
                              type: string
                              enum:
                                - any
                        - properties:
                            name:
                              type: string
                              enum:
                                - boxed
                            args:
                              type: object
                              properties:
                                when:
                                  type: string
                                  format: date-time
                                min_left:
                                  type: integer
                                starts_in:
                                  type: integer
                        - properties:
                            name:
                              type: string
                              enum:
                                - spot
                            args:
                              type: object
                              properties:
                                when:
                                  type: string
                                  format: date-time
                        - properties:
                            name:
                              type: string
                              enum:
                                - slice
                            args:
                              type: object
                              properties:
                                when:
                                  type: string
                                  format: date-time
                                starts_in:
                                  type: integer
                      type: object
                    topic.actors.name:
                      type: array
                      items:
                        type: string
                    topic.directors.name:
                      type: array
                      items:
                        type: string
                    topic.genre_ids:
                      type: array
                      items:
                        type: string
                order:
                  type: string
                  enum:
                    - relevancy
                    - popular
                    - recommend
                    - rating
                    - channels
  '/collection/{collection_id}/info':
    get:
      summary: Get collection info
      tags:
        - Collection Management
      responses:
        '200':
          description: OK
      operationId: nine.collection.info
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: collection_id
        in: path
        required: true
  /lookup:
    get:
      summary: Lookup by term
      tags:
        - Lookup Management
      responses:
        '200':
          description: OK
      operationId: get-e66cfdb6-51e1-4c68-90ef-60a031eb3150
      parameters:
        - schema:
            type: string
          in: query
          name: term
  /idlookup:
    get:
      summary: Lookup by id
      tags:
        - Lookup Management
      responses:
        '200':
          description: OK
      operationId: get-96ef61dc-14e1-4c6d-b82b-8df6cb1e1248
      parameters:
        - schema:
            type: string
            enum:
              - imdb
              - tmdb
              - wiki_data
          in: query
          name: source_id
        - schema:
            type: string
          in: query
          name: source
  '/user/{email}/reset/password':
    get:
      summary: Reset password init
      tags:
        - User Management
      responses:
        '200':
          description: OK
      operationId: nine.user.password.reset_init
      security:
        - X-AppKey: []
    post:
      summary: Reset password confirm
      tags: []
      responses:
        '200':
          description: OK
      operationId: nine.user.password.reset_complete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
              required:
                - token
                - password
    parameters:
      - schema:
          type: string
        name: email
        in: path
        required: true
  /user:
    get:
      summary: Login user
      tags:
        - User Management
      responses:
        '200':
          description: OK
      operationId: nine.user.login
      requestBody: {}
      parameters:
        - schema:
            type: string
          in: query
          name: email
        - schema:
            type: string
          in: query
          name: password
      security:
        - X-AppKey: []
    post:
      summary: Register user
      tags: []
      responses:
        '201':
          description: Created
      operationId: nine.user.register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
        description: ''
      security:
        - X-AppKey: []
    put:
      summary: Update user
      operationId: nine.user.update
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                old_password:
                  type: string
              required:
                - email
                - password
                - old_password
  '/user/{user_guid}/logout':
    get:
      summary: Logout user
      tags:
        - User Management
      responses:
        '200':
          description: OK
      operationId: nine.user.logout
      description: ''
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
  '/user/{user_guid}/reset/{object}':
    get:
      summary: Reset user
      tags:
        - User Management
      responses:
        '200':
          description: OK
      operationId: nine.user.reset.object
      description: ''
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
      - schema:
          type: string
          enum:
            - profile
            - locations
            - activity
            - link_expire
        name: object
        in: path
        required: true
  '/user/{user_guid}/activity':
    post:
      summary: Create a new activity
      tags:
        - Activity Management
      responses:
        '200':
          description: OK
      operationId: nine.user.activity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                id:
                  type: string
                type:
                  type: string
                context:
                  type: object
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
  '/user/{user_guid}/tastes':
    get:
      summary: Get user tastes
      tags:
        - Tastes Management
      responses:
        '200':
          description: OK
      operationId: get-c85e159a-996e-43b9-94f7-1eb2d7c98a45
    post:
      summary: Set user tastes
      tags: []
      responses:
        '200':
          description: OK
      operationId: post-d322c392-f261-4c3f-bfdc-673f6a9f465b
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
  '/user/{user_guid}/ratings':
    get:
      summary: Get user ratings
      responses:
        '200':
          description: OK
      operationId: nine.user.rating.get
      tags:
        - Rating Management
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
  '/user/{user_guid}/preferences':
    get:
      summary: Get user preferences
      tags:
        - User Management
      responses:
        '200':
          description: OK
      operationId: nine.user.preference.get
    post:
      summary: Set user preferences
      tags: []
      responses:
        '200':
          description: OK
      operationId: post-4201ec0c-9abc-4624-87eb-99837f12e266
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
  '/user/{user_guid}/trackers':
    get:
      summary: Get user trackers
      tags:
        - Tracker Management
      responses:
        '200':
          description: OK
      operationId: nine.user.tracker.get
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
  '/user/{user_guid}/tracker/{tracker_id}':
    post:
      summary: Create user tracker
      tags: []
      responses:
        '200':
          description: OK
      operationId: post-dd62e6cb-ef17-4f69-8b74-e1b60abf3e18
    delete:
      summary: Delete user tracker
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-1efc9755-42d2-4be4-b754-237ff2bfb980
    get:
      summary: Get user tracker
      tags:
        - Tracker Management
      responses:
        '200':
          description: OK
      operationId: nine.tracker.get
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: tracker_id
        in: path
        required: true
  '/user/{user_guid}/{type}/{id}/rate':
    post:
      summary: Create user event rating
      tags:
        - Rating Management
      responses:
        '200':
          description: OK
      operationId: nine.event.rate
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    value:
                      type: string
                      enum:
                        - favour
                        - unfavour
                        - delete
                        - undelete
                        - neutral
                - properties:
                    action:
                      type: string
                      enum:
                        - rate
                    score:
                      type: integer
                      minimum: 1
                      maximum: 5
              type: object
    parameters:
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: user_guid
        in: path
        required: true
      - schema:
          type: string
          enum:
            - topic
            - genre
        name: type
        in: path
        required: true
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: id
        in: path
        required: true
  '/{event_type}/{event_id}/trailer':
    get:
      summary: Get event trailer
      tags:
        - Event Management
      responses:
        '200':
          description: OK
      operationId: nine.event.trailer
    parameters:
      - schema:
          type: string
          enum:
            - event
            - odevent
        name: event_type
        in: path
        required: true
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: event_id
        in: path
        required: true
  '/{event_type}/{event_id}/info':
    get:
      summary: Get event details
      tags:
        - Event Management
      responses:
        '200':
          description: OK
      operationId: nine.event.info
    parameters:
      - schema:
          type: string
          enum:
            - event
            - odevent
        name: event_type
        in: path
        required: true
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: event_id
        in: path
        required: true
  '/{event_type}/{event_id}/gallery':
    get:
      summary: Get event gallery
      tags:
        - Event Management
      responses:
        '200':
          description: OK
      operationId: nine.event.gallery
    parameters:
      - schema:
          type: string
          enum:
            - event
            - odevent
        name: event_type
        in: path
        required: true
      - schema:
          type: string
          pattern: '^([A-Fa-f0-9]){24}$'
        name: event_id
        in: path
        required: true
components:
  schemas: {}
  securitySchemes:
    Autorization:
      name: Autorization
      type: apiKey
      in: header
    X-AppKey:
      name: X-AppKey
      type: apiKey
      in: header
security:
  - Autorization: []
  - X-AppKey: []
